<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:settings="clr-namespace:BuildNotifications.Resources.Settings"
                    xmlns:local="clr-namespace:BuildNotifications.Resources.Global"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:triggerActions="clr-namespace:BuildNotifications.Resources.BuildTree.TriggerActions"
                    xmlns:groupDefinitionSelection="clr-namespace:BuildNotifications.Resources.GroupDefinitionSelection"
                    xmlns:text="clr-namespace:BuildNotifications.Resources.Text"
                    xmlns:icons="clr-namespace:BuildNotifications.Resources.Icons"
                    xmlns:converters="clr-namespace:BuildNotifications.ViewModel.Utils.Converters">

    <local:BoolToBrushConverter BrushWhenTrue="Background3" x:Key="Background3WhenTrueConverter" />

    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="border" BorderThickness="1" Padding="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="0" Background="Transparent" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource Foreground1HalfTransparency}"
                                    TargetName="border" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Foreground2}"
                                    TargetName="border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type settings:DecoratedComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource Background3}" />
        <Setter Property="Background" Value="{DynamicResource Background1}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Background2}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="{StaticResource BlockHalfThickness}" />
        <Setter Property="Padding" Value="{StaticResource BlockQuarterXOnlyMargin}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">

                        <Setter.Value>

                            <ControlTemplate TargetType="ListBoxItem">
                                <Grid x:Name="Grid" Cursor="Hand">
                                    <Border BorderBrush="{DynamicResource Background3}"
                                            BorderThickness="0,0,0,1"
                                            x:Name="Border">
                                        <ContentPresenter>
                                            <ContentPresenter.Resources>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource Foreground1}" />
                                                </Style>
                                            </ContentPresenter.Resources>
                                        </ContentPresenter>
                                    </Border>

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Loaded">
                                            <triggerActions:ElementFadeInBackEase DoScale="False"
                                                Duration="0.3" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush"
                                                Value="{DynamicResource Foreground1}"
                                                TargetName="Border" />
                                        <Setter Property="Background"
                                                Value="{DynamicResource Background2}"
                                                TargetName="Grid" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Visibility"
                                                Value="Collapsed" />
                                    </Trigger>

                                </ControlTemplate.Triggers>

                            </ControlTemplate>

                        </Setter.Value>

                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Popup x:Name="PART_Popup" AllowsTransparency="False" Grid.ColumnSpan="2"
                               Width="{Binding ActualWidth, ElementName=MainGrid}"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="Fade"
                               PlacementTarget="{Binding ElementName=MainGrid}"
                               PlacementRectangle="0,18,0,0"
                               Placement="Bottom">
                            <Grid Background="{TemplateBinding Background}">
                                <Border Padding="{StaticResource BlockQuarterThickness}">
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    FocusVisualStyle="{x:Null}"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </Popup>
                        <settings:NotifyingContentPresenter
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            NotifyingContent="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            IsHitTestVisible="true" Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Grid.Column="0">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource Foreground1}" />
                                    <Setter Property="Margin" Value="0" />
                                </Style>
                            </ContentPresenter.Resources>
                            <i:Interaction.Triggers>
                                <ei:DataTrigger
                                    Binding="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Value="false">
                                    <text:FontSizeChange
                                        TargetSize="{StaticResource BlockFiveSixths}"
                                        Target="{Binding ElementName=Label}" Duration="0.35" />
                                </ei:DataTrigger>
                                <ei:DataTrigger
                                    Binding="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Value="true">
                                    <text:FontSizeChange TargetSize="{StaticResource Block}"
                                                         Target="{Binding ElementName=Label}"
                                                         Duration="0.1" />
                                </ei:DataTrigger>
                                <!--Combobox is designed to be used with IRemoveTracking objects-->
                                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                                <ei:DataTrigger
                                    Binding="{Binding Path=DataContext.IsRemoving, RelativeSource={RelativeSource TemplatedParent}}"
                                    Value="True">
                                    <groupDefinitionSelection:GroupDefinitionFadeOut Duration="0.4"
                                        Anchor="Center" />
                                </ei:DataTrigger>
                                <i:EventTrigger EventName="GotFocus">
                                    <text:FontSizeChange TargetSize="{StaticResource Block}"
                                                         Target="{Binding ElementName=Label}"
                                                         Duration="0.1" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LostFocus">
                                    <text:FontSizeChange
                                        TargetSize="{StaticResource BlockFiveSixths}"
                                        Target="{Binding ElementName=Label}" Duration="0.35" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="ContentUpdated">
                                    <groupDefinitionSelection:GroupDefinitionFadeIn Duration="0.4" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </settings:NotifyingContentPresenter>
                        <Grid>
                            <ToggleButton
                                BorderBrush="{Binding ToggleButtonActive, Converter={StaticResource Background3WhenTrueConverter}, RelativeSource={RelativeSource AncestorType={x:Type settings:DecoratedComboBox}, Mode=FindAncestor}}"
                                Grid.Column="0"
                                IsEnabled="{Binding ToggleButtonActive, RelativeSource={RelativeSource AncestorType={x:Type settings:DecoratedComboBox}, Mode=FindAncestor}}"
                                Width="{TemplateBinding Width}" Cursor="Hand"
                                Height="{TemplateBinding Height}" x:Name="ToggleButton"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ComboBoxReadonlyToggleButton}">

                                <i:Interaction.Triggers>
                                    <ei:DataTrigger Binding="{Binding Path=IsRemoving}"
                                                    Value="True">
                                        <triggerActions:ElementFadeOutScale Duration="0.3"
                                            Anchor="Center"
                                            TargetScaleX="1"
                                            TargetScaleY="1" />
                                    </ei:DataTrigger>
                                </i:Interaction.Triggers>
                            </ToggleButton>

                            <TextBlock
                                Margin="{StaticResource BlockHalfXOnlyMargin}"
                                Text="{text:Localized NoValue}"
                                Visibility="{Binding IsEmpty, RelativeSource={RelativeSource AncestorType={x:Type settings:DecoratedComboBox}, Mode=FindAncestor}, Converter={x:Static converters:BoolToVisibilityConverter.Instance}}"
                                Foreground="{DynamicResource Foreground1HalfTransparency}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center" />
                        </Grid>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"
                                    IsHitTestVisible="False"
                                    Margin="{StaticResource BlockQuarterXOnlyMargin}"
                                    Height="{StaticResource BlockOneAndHalf}">

                            <TextBlock
                                Text="{Binding Label, RelativeSource={RelativeSource AncestorType={x:Type settings:DecoratedComboBox}, Mode=FindAncestor}}"
                                Foreground="{DynamicResource Background3}" x:Name="Label"
                                HorizontalAlignment="Right"
                                Style="{StaticResource TextBoxLabelStyle}"
                                VerticalAlignment="Center" />

                            <icons:IconBatch Foreground="{TemplateBinding BorderBrush}"
                                             Margin="{StaticResource BlockQuarterXOnlyMargin}"
                                             Visibility="{Binding ToggleButtonActive, RelativeSource={RelativeSource AncestorType={x:Type settings:DecoratedComboBox}, Mode=FindAncestor}, Converter={x:Static converters:BoolToVisibilityConverter.Instance}}"
                                             Type="{Binding Icon, RelativeSource={RelativeSource AncestorType={x:Type settings:DecoratedComboBox}, Mode=FindAncestor}}"
                                             x:Name="Icon" HorizontalAlignment="Right"
                                             VerticalAlignment="Center" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" TargetName="Icon"
                                    Value="{DynamicResource Foreground1HalfTransparency}" />
                            <Setter Property="Foreground" TargetName="Label"
                                    Value="{DynamicResource Foreground1HalfTransparency}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=ToggleButton, Path=IsChecked}"
                                     Value="true">
                            <Setter Property="Foreground" TargetName="Icon"
                                    Value="{DynamicResource Foreground1}" />
                            <Setter Property="Foreground" TargetName="Label"
                                    Value="{DynamicResource Foreground1}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource Foreground1}" />
                <Setter Property="Background" Value="{DynamicResource Background1}" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="{DynamicResource BlockQuarterThickness}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>