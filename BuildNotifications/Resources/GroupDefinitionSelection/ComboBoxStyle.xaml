<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:groupDefinitionSelection="clr-namespace:BuildNotifications.Resources.GroupDefinitionSelection"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:triggerActions="clr-namespace:BuildNotifications.Resources.BuildTree.TriggerActions"
                    xmlns:settings="clr-namespace:BuildNotifications.Resources.Settings"
                    mc:Ignorable="d">


    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="border" BorderThickness="1" Padding="0,0"
                            BorderBrush="{DynamicResource Background3}"
                            CornerRadius="0" Background="{TemplateBinding Background}">
                        <Border.RenderTransform>
                            <SkewTransform AngleX="-35" />
                        </Border.RenderTransform>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource Foreground1HalfTransparency}"
                                    TargetName="border" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Foreground2}"
                                    TargetName="border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="GroupDefinitionSelectionComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource Background3}" />
        <Setter Property="Background" Value="{DynamicResource Background1}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Background2}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="-12,0,0,0" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="{StaticResource BlockFourTimes}" />
        <Setter Property="Height" Value="{StaticResource BlockOneAndHalf}" />
        <Setter Property="MinWidth" Value="{StaticResource BlockDouble}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="Fade"
                               PlacementRectangle="{StaticResource NegativeBlockLeftOneAndHalfBlockTopRectangle}"
                               PlacementTarget="{Binding ElementName=ToggleButton}"
                               Placement="Bottom">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Popup>
                        <settings:NotifyingContentPresenter
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            NotifyingContent="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            IsHitTestVisible="true" Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                            <i:Interaction.Triggers>
                                <!--Combobox is designed to be used with IRemoveTracking objects-->
                                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                                <ei:DataTrigger
                                    Binding="{Binding Path=DataContext.IsRemoving, RelativeSource={RelativeSource TemplatedParent}}"
                                    Value="True">
                                    <groupDefinitionSelection:GroupDefinitionFadeOut Duration="0.4"
                                        Anchor="Center" />
                                </ei:DataTrigger>

                                <i:EventTrigger EventName="ContentUpdated">
                                    <groupDefinitionSelection:GroupDefinitionFadeIn Duration="0.4" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </settings:NotifyingContentPresenter>
                        <ToggleButton BorderBrush="{TemplateBinding BorderBrush}"

                                      Width="{TemplateBinding MinWidth}" Cursor="Hand"
                                      Height="{TemplateBinding Height}" x:Name="ToggleButton"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ComboBoxReadonlyToggleButton}">

                            <i:Interaction.Triggers>
                                <ei:DataTrigger Binding="{Binding Path=IsRemoving}" Value="True">
                                    <triggerActions:ElementFadeOutScale Duration="0.3"
                                        Anchor="Center" TargetScaleX="1"
                                        TargetScaleY="1" />
                                </ei:DataTrigger>
                            </i:Interaction.Triggers>
                        </ToggleButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background" Value="#FFF4F4F4" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource Foreground1}" />
                <Setter Property="Background" Value="{DynamicResource Background1}" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="{DynamicResource BlockQuarterThickness}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>