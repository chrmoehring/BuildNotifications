<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icons="clr-namespace:BuildNotifications.Resources.Icons">

    <Style TargetType="{x:Type icons:IconToggleButton}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="IconSize" Value="{StaticResource BlockOneAndHalf}" />
        <Setter Property="MinHeight" Value="{StaticResource BlockOneAndHalf}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" Cursor="Hand"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <icons:IconBatch
                                Type="{Binding Icon, RelativeSource={RelativeSource AncestorType={x:Type icons:IconToggleButton}, Mode=FindAncestor}}"
                                Width="{Binding IconSize, RelativeSource={RelativeSource AncestorType={x:Type icons:IconToggleButton}, Mode=FindAncestor}}"
                                Height="{Binding IconSize, RelativeSource={RelativeSource AncestorType={x:Type icons:IconToggleButton}, Mode=FindAncestor}}"
                                Margin="{TemplateBinding Padding}" x:Name="Icon"
                                Foreground="{TemplateBinding Foreground}" />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" TargetName="Icon"
                                    Value="{DynamicResource Foreground1}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" TargetName="Icon"
                                    Value="{DynamicResource Foreground1HalfTransparency}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" TargetName="Icon"
                                    Value="{DynamicResource Foreground1}" />
                            <Setter Property="Opacity" TargetName="Icon" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Icon" Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type icons:IconToggleButton}"
           BasedOn="{StaticResource {x:Type icons:IconToggleButton}}"
           x:Key="IconButtonWithDockedContent">
        <Setter Property="Padding" Value="{StaticResource BlockHalfThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Cursor="Hand"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <icons:IconBatch
                                Type="{Binding Icon, RelativeSource={RelativeSource AncestorType={x:Type icons:IconToggleButton}, Mode=FindAncestor}}"
                                Width="{Binding IconSize, RelativeSource={RelativeSource AncestorType={x:Type icons:IconToggleButton}, Mode=FindAncestor}}"
                                Height="{Binding IconSize, RelativeSource={RelativeSource AncestorType={x:Type icons:IconToggleButton}, Mode=FindAncestor}}"
                                Margin="{TemplateBinding Padding}" x:Name="Icon"
                                DockPanel.Dock="Left"
                                Foreground="{TemplateBinding Foreground}" />

                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border"
                                    Value="{DynamicResource Background3}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" TargetName="Icon"
                                    Value="{DynamicResource Foreground1}" />
                            <Setter Property="Opacity" TargetName="Icon" Value="0.25" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Icon" Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="HiddenIconButton" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="MinWidth" Value="{StaticResource Block}" />
        <Setter Property="MinHeight" Value="{StaticResource Block}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Cursor="Hand"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <icons:IconBatch
                                Type="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                Width="{TemplateBinding Width}" Height="{TemplateBinding Width}"
                                x:Name="Icon" Opacity="0"
                                Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="Icon" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="Icon" Value="0.25" />
                            <Setter Property="Foreground" TargetName="Icon"
                                    Value="{DynamicResource Foreground2}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Icon" Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>